#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Signum.Web.Extensions.Chart.Views
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    
    #line 4 "..\..\Chart\Views\ChartResultsTable.cshtml"
    using System.Web.Mvc;
    
    #line default
    #line hidden
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 3 "..\..\Chart\Views\ChartResultsTable.cshtml"
    using Signum.Engine;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Chart\Views\ChartResultsTable.cshtml"
    using Signum.Entities;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Chart\Views\ChartResultsTable.cshtml"
    using Signum.Entities.Chart;
    
    #line default
    #line hidden
    
    #line 1 "..\..\Chart\Views\ChartResultsTable.cshtml"
    using Signum.Entities.DynamicQuery;
    
    #line default
    #line hidden
    
    #line 2 "..\..\Chart\Views\ChartResultsTable.cshtml"
    using Signum.Entities.Reflection;
    
    #line default
    #line hidden
    using Signum.Utilities;
    
    #line 6 "..\..\Chart\Views\ChartResultsTable.cshtml"
    using Signum.Web;
    
    #line default
    #line hidden
    
    #line 8 "..\..\Chart\Views\ChartResultsTable.cshtml"
    using Signum.Web.Chart;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Chart/Views/ChartResultsTable.cshtml")]
    public partial class ChartResultsTable : System.Web.Mvc.WebViewPage<TypeContext<ChartRequest>>
    {
        public ChartResultsTable()
        {
        }
        public override void Execute()
        {
            
            #line 10 "..\..\Chart\Views\ChartResultsTable.cshtml"
   
    ResultTable queryResult = (ResultTable)ViewData[ViewDataKeys.Results];
    bool navigate = (bool)ViewData[ViewDataKeys.Navigate];
    var formatters = (Dictionary<int, CellFormatter>)ViewData[ViewDataKeys.Formatters];

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(">\r\n    <table");

WriteAttribute("id", Tuple.Create(" id=\"", 524), Tuple.Create("\"", 557)
            
            #line 16 "..\..\Chart\Views\ChartResultsTable.cshtml"
, Tuple.Create(Tuple.Create("", 529), Tuple.Create<System.Object, System.Int32>(Model.Compose("tblResults")
            
            #line default
            #line hidden
, 529), false)
);

WriteLiteral(" class=\"sf-search-results table table-hover  table-condensed\"");

WriteLiteral(">\r\n        <thead>\r\n            <tr>\r\n");

            
            #line 19 "..\..\Chart\Views\ChartResultsTable.cshtml"
                
            
            #line default
            #line hidden
            
            #line 19 "..\..\Chart\Views\ChartResultsTable.cshtml"
                 if (!Model.Value.GroupResults && navigate)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <th");

WriteLiteral(" class=\"sf-th-entity\"");

WriteLiteral("></th>\r\n");

            
            #line 22 "..\..\Chart\Views\ChartResultsTable.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 23 "..\..\Chart\Views\ChartResultsTable.cshtml"
                 if (queryResult.Columns.Any())
                {
                    foreach (ResultColumn col in queryResult.Columns)
                    {
                        var order = Model.Value.Orders.FirstOrDefault(oo => oo.Token.FullKey() == col.Column.Name);

            
            #line default
            #line hidden
WriteLiteral("                    <th");

WriteLiteral(" data-column-name=\"");

            
            #line 28 "..\..\Chart\Views\ChartResultsTable.cshtml"
                                     Write(col.Column.Name);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">\r\n                        <span");

WriteAttribute("class", Tuple.Create(" class=\"", 1178), Tuple.Create("\"", 1333)
, Tuple.Create(Tuple.Create("", 1186), Tuple.Create("sf-header-sort", 1186), true)
            
            #line 29 "..\..\Chart\Views\ChartResultsTable.cshtml"
, Tuple.Create(Tuple.Create(" ", 1200), Tuple.Create<System.Object, System.Int32>(order == null ? "" : ((order.OrderType == OrderType.Ascending ? "asc" : "desc") + (" l" + Model.Value.Orders.IndexOf(order) % 4))
            
            #line default
            #line hidden
, 1201), false)
);

WriteLiteral("></span>\r\n                        <span>");

            
            #line 30 "..\..\Chart\Views\ChartResultsTable.cshtml"
                         Write(col.Column.DisplayName);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n                    </th>\r\n");

            
            #line 32 "..\..\Chart\Views\ChartResultsTable.cshtml"
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("            </tr>\r\n        </thead>\r\n        <tbody>\r\n");

            
            #line 37 "..\..\Chart\Views\ChartResultsTable.cshtml"
            
            
            #line default
            #line hidden
            
            #line 37 "..\..\Chart\Views\ChartResultsTable.cshtml"
             if (!queryResult.Rows.Any())
            {

            
            #line default
            #line hidden
WriteLiteral("                <tr>\r\n                    <td");

WriteAttribute("colspan", Tuple.Create(" colspan=\"", 1632), Tuple.Create("\"", 1693)
            
            #line 40 "..\..\Chart\Views\ChartResultsTable.cshtml"
, Tuple.Create(Tuple.Create("", 1642), Tuple.Create<System.Object, System.Int32>(queryResult.Columns.Count() + (navigate ? 1 : 0)
            
            #line default
            #line hidden
, 1642), false)
);

WriteLiteral(">");

            
            #line 40 "..\..\Chart\Views\ChartResultsTable.cshtml"
                                                                                 Write(SearchMessage.NoResultsFound.NiceToString());

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </td>\r\n                </tr>\r\n");

            
            #line 43 "..\..\Chart\Views\ChartResultsTable.cshtml"
            }
            else
            {
                foreach (var row in queryResult.Rows)
                {
                    if (Model.Value.GroupResults)
                    {
                            

            
            #line default
            #line hidden
WriteLiteral("                <tr>\r\n");

            
            #line 52 "..\..\Chart\Views\ChartResultsTable.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 52 "..\..\Chart\Views\ChartResultsTable.cshtml"
                     foreach (var col in queryResult.Columns)
                    {
                        CellFormatter ft = formatters[col.Index];
                        var value = row[col];

            
            #line default
            #line hidden
WriteLiteral("                        <td ");

            
            #line 56 "..\..\Chart\Views\ChartResultsTable.cshtml"
                       Write(ft.WriteDataAttribute(value));

            
            #line default
            #line hidden
WriteLiteral(">");

            
            #line 56 "..\..\Chart\Views\ChartResultsTable.cshtml"
                                                     Write(ft.Formatter(Html, value));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n");

            
            #line 57 "..\..\Chart\Views\ChartResultsTable.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </tr>\r\n");

            
            #line 59 "..\..\Chart\Views\ChartResultsTable.cshtml"
                    
                    }
                    else
                    {

                        Lite<Entity> entityField = row.Entity;

            
            #line default
            #line hidden
WriteLiteral("                <tr");

WriteLiteral(" data-entity=\"");

            
            #line 65 "..\..\Chart\Views\ChartResultsTable.cshtml"
                            Write(entityField.Key());

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">\r\n");

            
            #line 66 "..\..\Chart\Views\ChartResultsTable.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 66 "..\..\Chart\Views\ChartResultsTable.cshtml"
                     if (entityField != null && navigate)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <td>");

            
            #line 68 "..\..\Chart\Views\ChartResultsTable.cshtml"
                       Write(QuerySettings.EntityFormatRules.Last(fr => fr.IsApplyable(entityField)).Formatter(Html, entityField));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n");

            
            #line 69 "..\..\Chart\Views\ChartResultsTable.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 70 "..\..\Chart\Views\ChartResultsTable.cshtml"
                     foreach (var col in queryResult.Columns)
                    {
                        var value = row[col];
                        var ft = formatters[col.Index];

            
            #line default
            #line hidden
WriteLiteral("                        <td ");

            
            #line 74 "..\..\Chart\Views\ChartResultsTable.cshtml"
                       Write(ft.WriteDataAttribute(value));

            
            #line default
            #line hidden
WriteLiteral(">");

            
            #line 74 "..\..\Chart\Views\ChartResultsTable.cshtml"
                                                     Write(ft.Formatter(Html, value));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n");

            
            #line 75 "..\..\Chart\Views\ChartResultsTable.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </tr>\r\n");

            
            #line 77 "..\..\Chart\Views\ChartResultsTable.cshtml"
                    
                    }
                }
            }

            
            #line default
            #line hidden
WriteLiteral("        </tbody>\r\n    </table>\r\n</div>\r\n\r\n");

        }
    }
}
#pragma warning restore 1591
