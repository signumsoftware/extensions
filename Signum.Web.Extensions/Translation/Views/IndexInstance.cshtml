@using System.Reflection
@using Signum.Engine.Translation
@using Signum.Web.Translation.Controllers
@using System.Globalization;
@using Signum.Engine.Basics;
@using Signum.Entities.Translation
@model Dictionary<Type, Dictionary<CultureInfo, TranslatedTypeSummary>>
@{
    ViewBag.Title = TranslationMessage.InstanceTranslations.NiceToString();        
}

@Html.ScriptCss("~/Translation/Content/Translation.css")

@if (Model.IsEmpty())
{
    <h2>@TranslationMessage.NothingToTranslate.NiceToString()</h2>   
}
else
{
    <h2>@ViewBag.Title</h2>
    
    using (Html.BeginForm((TranslatedInstanceController pc) => pc.UploadFile(), new { enctype = "multipart/form-data", encoding = "multipart/form-data" }))
    {
    <input type="file" name="xmlFile" />
    <input type="submit" value="Upload" class="sf-button" />
    <span class="glyphicon glyphicon glyphicon-open"></span>
    }

    var langs = Model.First().Value.Keys;

    <table class="st">
        <tr>
            <th></th>
            <th>@TranslationMessage.All.NiceToString()</th>
            @foreach (var ci in langs)
            {
                <th>@ci.Name</th>
            }
        </tr>
        @foreach (var type in Model)
        {
            <tr>
                <th>@type.Key.NiceName()</th>

                <td>
                    @Html.ActionLink(TranslationMessage.View.NiceToString(), (TranslatedInstanceController tc) => tc.View(TypeLogic.GetCleanName(type.Key), null, false, null))
                </td>
                @foreach (var tf in type.Value.Values)
                {
                    <td>
                        @if (tf.CultureInfo.Name == TranslatedInstanceLogic.DefaultCulture().Name)
                        {
                            <text>@TranslationMessage.None.NiceToString()</text>
                        }
                        else
                        {
                            @Html.ActionLink(TranslationMessage.View.NiceToString(), (TranslatedInstanceController tc) => tc.View(TypeLogic.GetCleanName(tf.Type), tf.CultureInfo.Name, false, null))
                            
                            <a href="@Url.Action((TranslatedInstanceController tc) => tc.ViewFile(TypeLogic.GetCleanName(tf.Type), tf.CultureInfo.Name))">
                                <span class="glyphicon glyphicon glyphicon-save"></span>
                            </a>
                            <br />
                            if (tf.State != null)
                            {
                            @Html.ActionLink(TranslationMessage.Sync.NiceToString(), (TranslatedInstanceController tc) => tc.Sync(TypeLogic.GetCleanName(tf.Type), tf.CultureInfo.Name), new { @class = "status-" + tf.State.ToString() })
                                                
                            <a href="@Url.Action((TranslatedInstanceController tc) => tc.SyncFile(TypeLogic.GetCleanName(tf.Type), tf.CultureInfo.Name))" class="status-@tf.State.ToString()">
                                <span class="glyphicon glyphicon glyphicon-save"></span>
                            </a>
                            }
                        }
                    </td>
                }
            </tr>
        }
    </table>
}