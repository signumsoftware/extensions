@model Dictionary<CultureInfo, Dictionary<LocalizedInstanceKey, TranslatedInstanceEntity>>
@using System.Globalization
@using Signum.Engine.Translation
@using Signum.Entities.Translation
@using System.Reflection
@using Signum.Utilities
@using Signum.Web.Translation.Controllers
@{
    CultureInfo culture = ViewBag.Culture;
    Type type = ViewBag.Type;

    ViewBag.Title = TranslationMessage.View0In1.NiceToString().FormatWith(type.NiceName(), culture == null ? TranslationMessage.AllLanguages.NiceToString() : culture.DisplayName);

    Dictionary<LocalizedInstanceKey, string> master = ViewBag.Master;

    var cultures = TranslationLogic.CurrentCultureInfos(TranslatedInstanceLogic.DefaultCulture());

    Func<CultureInfo, bool> editCulture = c => culture == null || culture.Name == c.Name;

    var filter = (string)ViewBag.Filter;

    var all = string.IsNullOrEmpty(filter);

    Func<LocalizedInstanceKey, bool> filtered = li => all ||
        li.RowId.ToString() == filter ||
        li.Instance.Id.ToString() == filter ||
        li.Route.PropertyString().Contains(filter, StringComparison.InvariantCultureIgnoreCase) ||
        master.GetOrThrow(li).Contains(filter, StringComparison.InvariantCultureIgnoreCase) ||
        cultures.Any(ci => Model.TryGetC(ci).TryGetC(li).Try(t => t.TranslatedText).DefaultText("").Contains(filter, StringComparison.InvariantCultureIgnoreCase));
}
@Html.ScriptCss("~/Translation/Content/Translation.css")



<h2>@ViewBag.Title</h2>

<div>
    @using (Html.BeginForm("View", "TranslatedInstance", FormMethod.Get))
    {
        @Html.Hidden("type")
        @Html.Hidden("culture")
        @Html.TextBox("filter", filter);

        <input type="hidden" name="searchPressed" value="true" />
        <input type="submit" value="@TranslationMessage.Search.NiceToString()" />
    }
</div>

@if (Model == null)
{
    <em>@TranslationMessage.PressSearchForResults.NiceToString()</em>
}
else if (Model.IsEmpty())
{
    <strong>@TranslationMessage.NoResultsFound.NiceToString()</strong>
}
else
{
    using (Html.BeginForm((TranslatedInstanceController c) => c.SaveView(Signum.Engine.Basics.TypeLogic.GetCleanName(type), culture == null ? null : culture.Name, filter)))
    {
        <table id="results" style="width: 100%; margin: 0px" class="st">
            @foreach (var instance in master.Keys.Where(li => master.GetOrThrow(li).HasText()).Where(filtered).GroupBy(a => a.Instance).OrderBy(a => a.Key.Id))
            {
                <thead>
                    <tr>
                        <th class="leftCell">@TranslationMessage.Instance.NiceToString()</th>
                        <th class="titleCell">@Html.Href(Navigator.NavigateRoute(instance.Key), instance.Key.ToString())</th>
                    </tr>
                </thead>

                foreach (LocalizedInstanceKey key in instance.OrderBy(a => a.Route.ToString()))
                {
                    var propertyString = key.Route.PropertyString().Replace("/", "[" + key.RowId + "].");
                    <tr>
                        <th class="leftCell">
                            @TranslationMessage.Property.NiceToString()
                    </th>
                    <th>@propertyString</th>
                </tr>

                    foreach (var ci in cultures)
                    {
                        var formName = ci.Name + "#" + key.Instance.Key() + "#" + propertyString;

                        if (ci.Name == TranslatedInstanceLogic.DefaultCulture().Name)
                        {
                            <tr>
                                <td class="leftCell"><em>@TranslatedInstanceLogic.DefaultCulture()</em></td>
                                <td class="monospaceCell">
                                    @if (TranslatedInstanceLogic.RouteType(key.Route).Value == TraducibleRouteType.Html)
                                    {
                                        <pre>@master[key]</pre>
                                    }
                                    else
                                    {
                                        @master[key]
                                    }
                                    @Html.TextArea(formName, master[key], new { style = "display:none" })
                                </td>
                            </tr>
                        }
                        else
                        {
                            TranslatedInstanceEntity trans = Model.TryGetC(ci).TryGetC(key);

                            if (trans != null && editCulture(ci))
                            {
                                <tr>
                                    <td class="leftCell">@ci.Name Diff</td>
                                    <td class="monospaceCell">
                                        <pre>@Signum.Web.Translation.TranslationClient.Diff(trans.OriginalText, trans.TranslatedText)</pre>
                                    </td>
                                </tr>

                            }


                            if (trans != null || editCulture(ci))
                            {
                                <tr>
                                    <td class="leftCell">@ci.Name</td>
                                    <td class="monospaceCell">
                                        @if (editCulture(ci))
                                        {
                                            @Html.TextArea(formName, trans.Try(t => t.TranslatedText), new { style = "width:90%;" })
                                        }
                                        else if (TranslatedInstanceLogic.RouteType(key.Route).Value == TraducibleRouteType.Html)
                                        {
                                            <pre>@trans.TranslatedText</pre>
                                        }
                                        else
                                        {
                                            @trans.TranslatedText
                                        }
                                    </td>
                                </tr>
                            }
                        }

                    }
                }
            }
        </table>
        <input type="submit" value="@TranslationMessage.Save.NiceToString()" />
    }
}


<script>
    $(function () {
        @(Signum.Web.Translation.TranslationClient.Module["fixTextAreas"]())
    });
</script>
